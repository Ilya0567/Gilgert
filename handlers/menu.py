# handlers_menu.py
import logging
from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import ContextTypes, ConversationHandler

from utils.states import MENU, GPT_QUESTION, CHECK_PRODUCT, RECIPES

logger = logging.getLogger(__name__)

async def start_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /start.
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é.
    """
    keyboard = [
        [InlineKeyboardButton("–û –Ω–∞—Å", callback_data='about')],
        [InlineKeyboardButton("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç", callback_data='check_product')],
        [InlineKeyboardButton("–ó–¥–æ—Ä–æ–≤—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã", callback_data='healthy_recipes')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    # –í–æ—Ç –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–∞—à —Å—Ç–∞—Ä—ã–π —Ç–µ–∫—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è:
    welcome_text = (
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –≤–∞—à –ø–æ–º–æ—â–Ω–∏–∫, —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è –ø–æ–º–æ—â–∏ –ª—é–¥—è–º —Å —Å–∏–Ω–¥—Ä–æ–º–æ–º –ñ–∏–ª—å–±–µ—Ä–∞.\n\n"
        "–Ø –º–æ–≥—É –ø–æ–º–æ—á—å –í–∞–º —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏ –ø–æ –ø—Ä–æ–¥—É–∫—Ç–∞–º –ø–∏—Ç–∞–Ω–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, "
        "–º–æ–∂–Ω–æ –ª–∏ –µ—Å—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç. –¢–∞–∫–∂–µ –í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–æ–±—Ä–∞–Ω–Ω—ã–µ –º–Ω–æ–π –≤–∫—É—Å–Ω—ã–µ –∑–¥–æ—Ä–æ–≤—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã.\n\n"
        "‚ú® –í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å –º–Ω–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å –≤ —á–∞—Ç–µ, –∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –ø–æ–º–æ—á—å!"
    )

    if update.message:
        await update.message.reply_text(text=welcome_text, reply_markup=reply_markup)
    elif update.callback_query:
        await update.callback_query.edit_message_text(text=welcome_text, reply_markup=reply_markup)
    return MENU


async def menu_callback(update: Update, context: ContextTypes.DEFAULT_TYPE, callback_query=None):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é.
    –ü–∞—Ä–∞–º–µ—Ç—Ä callback_query –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–µ—Ä–µ–¥–∞—Ç—å –≤–Ω–µ—à–Ω–∏–π –æ–±—ä–µ–∫—Ç callback_query –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏.
    """
    
    query = callback_query or update.callback_query
    
    # –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –≤—ã–∑–æ–≤ answer() —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π 
    if hasattr(query, 'answer') and callable(query.answer):
        await query.answer()
    
    data = query.data

    logger.debug(data)

    if data == 'about':
        # –°—Ç–∞–≤–∏–º —Å—Ç–∞—Ä—ã–π —Ç–µ–∫—Å—Ç "–û –Ω–∞—Å":
        about_text = (
            "ü§ñ ¬´PYOOTS¬ª ‚Äî —ç—Ç–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫, —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è –ª—é–¥–µ–π —Å —Å–∏–Ω–¥—Ä–æ–º–æ–º –ñ–∏–ª—å–±–µ—Ä–∞.\n\n"
            "üè• –û–Ω –ø—Ä–∏–∑–≤–∞–Ω –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–æ–º —É—Ö–æ–¥–µ –∑–∞ –∑–¥–æ—Ä–æ–≤—å–µ–º –∏ —Å–¥–µ–ª–∞—Ç—å –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–µ–µ.\n\n"
            "üíô –ë–æ—Ç —É–∂–µ –ø—Ä–∏–º–µ–Ω—è–µ—Ç –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –¥–ª—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª–µ–∑–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π, "
            "–∞ –≤ –±—É–¥—É—â–µ–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –±—É–¥–µ—Ç —Ä–∞—Å—à–∏—Ä—è—Ç—å—Å—è, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—è –µ—â—ë –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã–µ –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–æ–≤–µ—Ç—ã."
        )
        await query.edit_message_text(
            text=about_text,
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data='back_to_menu')]
            ])
        )
        return MENU

    elif data == 'ask_question':
        # –¢–µ–∫—Å—Ç –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –∫ GPT
        await query.edit_message_text(
            text="‚ùì –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–¥–∞–π—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å.\n\n"
                 "–ö–∞–∫ —Ç–æ–ª—å–∫–æ –≤—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –æ—Ç–≤–µ—Ç–∏—Ç—å –≤–∞–º.",
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("–û—Ç–º–µ–Ω–∞", callback_data='back_to_menu')]
            ])
        )
        return GPT_QUESTION

    elif data == 'check_product':
        await query.edit_message_text(
            text="üîç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:",
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("–û—Ç–º–µ–Ω–∞", callback_data='back_to_menu')]
            ])
        )
        return CHECK_PRODUCT

    elif data == 'healthy_recipes':
        # –ú–µ–Ω—é, –≥–¥–µ –º—ã –ø–æ–∫–∞–∑—ã–≤–∞–µ–º ¬´–∑–∞–≤—Ç—Ä–∞–∫–∏¬ª, ¬´–æ–±–µ–¥—ã¬ª, ¬´—É–∂–∏–Ω—ã¬ª
        await query.edit_message_text(
            text="–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∏–µ–º –ø–∏—â–∏:",
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("–ó–∞–≤—Ç—Ä–∞–∫–∏", callback_data="breakfast")],
                [InlineKeyboardButton("–ü–æ–ª–¥–Ω–∏–∫–∏", callback_data="poldnik")],
                [InlineKeyboardButton("–û–±–µ–¥—ã", callback_data="lunch")],
                [InlineKeyboardButton("–£–∂–∏–Ω—ã", callback_data="dinner")],
                [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='back_to_menu')]
            ])
        )
        return RECIPES

    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º callback_query –æ—Ç –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é —Ä–µ—Ü–µ–ø—Ç–æ–≤, –Ω–æ –æ—Å—Ç–∞–µ–º—Å—è –≤ –º–µ–Ω—é MENU
    # –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å –∫–Ω–æ–ø–∫–∞–º–∏ –±–µ–∑ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
    elif data in ["breakfast", "poldnik", "lunch", "dinner"] or data.startswith(("bcat_", "bitem_", "pcat_", "pitem_", "lcat_", "litem_", "dcat_", "ditem_")):
        from handlers.recipes import recipes_callback
        await recipes_callback(update, context)
        return MENU

    elif data == 'back_to_menu':
        return await start_menu(update, context)

    return MENU


async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—â–∏–π fallback (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–∏ /cancel).
    –ó–∞–≤–µ—Ä—à–∞–µ—Ç –¥–∏–∞–ª–æ–≥ –∏ ConversationHandler.
    """
    if update.message:
        await update.message.reply_text("–î–∏–∞–ª–æ–≥ –ø—Ä–µ—Ä–≤–∞–Ω. –í–≤–µ–¥–∏—Ç–µ /start –∑–∞–Ω–æ–≤–æ.")
    elif update.callback_query:
        await update.callback_query.edit_message_text("–î–∏–∞–ª–æ–≥ –ø—Ä–µ—Ä–≤–∞–Ω. –í–≤–µ–¥–∏—Ç–µ /start –∑–∞–Ω–æ–≤–æ.")
    return ConversationHandler.END
