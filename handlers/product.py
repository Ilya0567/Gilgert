# handlers_product.py
import logging
from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import ContextTypes

from states import MENU, GPT_QUESTION, CHECK_PRODUCT, RECIPES
from data_operation import check_product, id_request
from config import CHAT_ID

logger = logging.getLogger(__name__)

async def product_user_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –°–æ—Å—Ç–æ—è–Ω–∏–µ CHECK_PRODUCT: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞,
    –±–æ—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –æ—Ç–≤–µ—á–∞–µ—Ç.
    """
    product = update.message.text
    user_name = update.message.from_user.username or update.message.from_user.full_name

    # –∏—â–µ–º –æ—Ç–≤–µ—Ç
    answer = check_product(product)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
    await update.message.reply_text(
        answer,
        reply_markup=InlineKeyboardMarkup([
            [InlineKeyboardButton("üîô –í –º–µ–Ω—é", callback_data='back_to_menu')]
        ])
    )

    # –ï—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –≤–æ–ø—Ä–æ—Å —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º
    # (—Å—É–¥—è –ø–æ –≤–∞—à–µ–º—É –∫–æ–¥—É, –µ—Å–ª–∏ "–æ—Ç–≤–µ—Ç" —Ñ–∏–≥—É—Ä–∏—Ä—É–µ—Ç –≤ —Ç–µ–∫—Å—Ç–µ)
    if "–æ—Ç–≤–µ—Ç" in answer.lower():
        product_question_id = id_request()
        await context.bot.send_message(
            chat_id=CHAT_ID,
            text=f'–í–æ–ø—Ä–æ—Å –ø–æ –ø—Ä–æ–¥—É–∫—Ç—É ‚Ññ{product_question_id} –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_name}:\n "{product}"'
        )

    return MENU
