# handlers_gpt.py
import logging
from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import ContextTypes

from ..utils.states import MENU, GPT_QUESTION, CHECK_PRODUCT, RECIPES
from ..utils import gpt_35  # –≤–∞—à —Ñ–∞–π–ª —Å ChatGPTClient
from ..utils.config import KEY

GPT_CLIENT = gpt_35.ChatGPTClient(api_key=KEY)

logger = logging.getLogger(__name__)

async def gpt_user_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –°–æ—Å—Ç–æ—è–Ω–∏–µ GPT_QUESTION: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏—Å–ª–∞–ª —Ç–µ–∫—Å—Ç - –∑–∞–ø—Ä–æ—Å –∫ GPT.
    """
    user_question = update.message.text

    try:
        # –í—ã–∑—ã–≤–∞–µ–º ChatGPT
        gpt_response = gpt_35.ChatGPTClient(api_key=gpt_35.KEY).generate_response(user_message=user_question)
        # –ò–ª–∏, –µ—Å–ª–∏ –≤—ã —É–∂–µ –∏–º–µ–µ—Ç–µ –≥–æ—Ç–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç: gpt_35.client.generate_response(...)
        # –í –≤–∞—à–µ–º –∫–æ–¥–µ GPT_CLIENT = gpt_35.ChatGPTClient(api_key=KEY).
        # –ú–æ–∂–µ—Ç–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π (–∫–∞–∫ –±—ã–ª–æ), —Ç–æ–≥–¥–∞ –ø—Ä–æ—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ GPT_CLIENT.

        await update.message.reply_text(
            text=gpt_response,
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("üîô –í –º–µ–Ω—é", callback_data='back_to_menu')]
            ])
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å GPT: {e}")
        await update.message.reply_text(
            text=f"‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞:\n{str(e)}",
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("üîô –í –º–µ–Ω—é", callback_data='back_to_menu')]
            ])
        )

    return MENU
