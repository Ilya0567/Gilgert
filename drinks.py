import pandas as pd

class DrinksGenerator:
    """
    –ö–ª–∞—Å—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–∞–±–ª–∏—Ü–µ–π –Ω–∞–ø–∏—Ç–∫–æ–≤.
    –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å Excel/CSV-—Ñ–∞–π–ª —Å –∫–æ–ª–æ–Ω–∫–∞–º–∏:
      - ‚Ññ
      - –ù–∞–∑–≤–∞–Ω–∏–µ
      - –ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –Ω–∞ 1 –ø–æ—Ä—Ü–∏—é:
      - –ü—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ:
      - –ö–∞–∫–æ–µ –±–ª—é–¥–æ (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å "–Ω–∞–ø–∏—Ç–∫–∏")
      - –ë–ª—é–¥–æ –∏–∑ (–∫–∞—Ç–µ–≥–æ—Ä–∏—è, –Ω–∞–ø—Ä–∏–º–µ—Ä "—á–∞–π" / "–∫–æ—Ñ–µ" / ...)
    """

    def __init__(self, data_source):
        """
        data_source: –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, "Data/–ù–∞–ø–∏—Ç–∫–∏.csv" –∏–ª–∏ Excel).
        –ï—Å–ª–∏ Excel, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ pd.read_excel(...).
        –ï—Å–ª–∏ CSV, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ pd.read_csv(...).
        –¢—É—Ç –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞ CSV.
        """
        try:
            # –ï—Å–ª–∏ —É –≤–∞—Å Excel, —Å–¥–µ–ª–∞–π—Ç–µ:
            # self.df = pd.read_excel(data_source, header=1)
            self.df = pd.read_csv(data_source)
            print("Drinks DataFrame –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ Drinks DataFrame: {e}")
            self.df = None

        if self.df is None or self.df.empty:
            raise ValueError("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –Ω–∞–ø–∏—Ç–∫–∞—Ö. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª.")

        # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –Ω—É–∂–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏ –µ—Å—Ç—å
        # (–ø–æ–¥—Å—Ç–∞–≤—å—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–æ–ª–æ–Ω–æ–∫, –µ—Å–ª–∏ –æ—Ç–ª–∏—á–∞—é—Ç—Å—è)
        needed_cols = ["–ù–∞–∑–≤–∞–Ω–∏–µ:", "–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –Ω–∞ 1 –ø–æ—Ä—Ü–∏—é:", "–ü—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ:", "–ö–∞–∫–æ–µ –±–ª—é–¥–æ", "–ë–ª—é–¥–æ –∏–∑"]
        for col in needed_cols:
            if col not in self.df.columns:
                raise ValueError(f"–í —Ñ–∞–π–ª–µ —Å –Ω–∞–ø–∏—Ç–∫–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∫–æ–ª–æ–Ω–∫–∞ '{col}'")

        # –û—á–∏—Å—Ç–∫–∞ –ø—Ä–æ–±–µ–ª–æ–≤ –∏ —Ç.–ø.
        self.df.columns = self.df.columns.str.strip()

    def get_unique_categories(self):
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –∏–∑ —Å—Ç–æ–ª–±—Ü–∞ '–ë–ª—é–¥–æ –∏–∑'.
        –≠—Ç–æ –∏ –±—É–¥—É—Ç –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–∞–ø–∏—Ç–∫–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, '—á–∞–π', '–∫–æ—Ñ–µ' –∏ —Ç.–¥.).
        """
        return sorted(self.df["–ë–ª—é–¥–æ –∏–∑"].dropna().unique().tolist())

    def get_drinks_by_category(self, cat: str):
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ (—Å—Ç—Ä–æ–∫) –Ω–∞–∑–≤–∞–Ω–∏–π –Ω–∞–ø–∏—Ç–∫–æ–≤, —É –∫–æ—Ç–æ—Ä—ã—Ö '–ë–ª—é–¥–æ –∏–∑' == cat.
        """
        subset = self.df[self.df["–ë–ª—é–¥–æ –∏–∑"] == cat]
        return subset["–ù–∞–∑–≤–∞–Ω–∏–µ"].tolist()

    def get_drink_details(self, drink_name: str):
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º, –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞–º–∏ –∏ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ–º.
        """
        row = self.df[self.df["–ù–∞–∑–≤–∞–Ω–∏–µ:"] == drink_name]
        if row.empty:
            return f"–ù–∞–ø–∏—Ç–æ–∫ ¬´{drink_name}¬ª –Ω–µ –Ω–∞–π–¥–µ–Ω."

        ingredients = row.iloc[0]["–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –Ω–∞ 1 –ø–æ—Ä—Ü–∏—é:"]
        preparation = row.iloc[0]["–ü—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ:"]
        return (
            f"üçπ {drink_name}\n\n"
            f"–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã:\n{ingredients}\n\n"
            f"–ü—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ:\n{preparation}"
        )
