import pandas as pd

class LunchGenerator:
    def __init__(self, data_source):
        try:
            self.df = pd.read_csv(data_source)
            print("DataFrame –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DataFrame: {e}")
            self.df = None

        if self.df is None or self.df.empty:
            raise ValueError("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª.")
        
        self.df.columns = self.df.columns.str.strip()
        self.df["–¢–∏–ø –±–ª—é–¥–∞"] = self.df["–¢–∏–ø –±–ª—é–¥–∞"].str.strip()

        self.lunch = {
            "–ü–µ—Ä–≤–æ–µ –±–ª—é–¥–æ": None,
            "—Å–∞–ª–∞—Ç": None,
            "–≥–∞—Ä–Ω–∏—Ä—ã": None,
            "–≤—Ç–æ—Ä–æ–µ –±–ª—é–¥–æ": None
        }
        self.create_lunch()

    def create_lunch(self):
        """–°–æ–∑–¥–∞—ë—Ç –æ–±–µ–¥, –≤—ã–±–∏—Ä–∞—è —Å–ª—É—á–∞–π–Ω–æ–µ –±–ª—é–¥–æ –¥–ª—è –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
        categories = list(self.lunch.keys())
        for category in categories:
            available_dishes = self.df[self.df["–¢–∏–ø –±–ª—é–¥–∞"] == category]
            if not available_dishes.empty:
                selected_dish = available_dishes.sample(1).iloc[0]
                self.lunch[category] = selected_dish["–ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–≤—Ç—Ä–∞–∫–∞:"]
            else:
                self.lunch[category] = None

    def change_dish(self, category):
        """
        –ú–µ–Ω—è–µ—Ç —Ç–µ–∫—É—â–µ–µ –±–ª—é–¥–æ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–∞ —Å–ª—É—á–∞–π–Ω–æ–µ –±–ª—é–¥–æ —Ç–æ–≥–æ –∂–µ —Ç–∏–ø–∞.
        """
        if category not in self.lunch:
            raise ValueError(f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è '{category}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ —Ç–µ–∫—É—â–µ–º –æ–±–µ–¥–µ.")

        current_dish = self.lunch[category]
        available_dishes = self.df[self.df["–¢–∏–ø –±–ª—é–¥–∞"] == category]
        
        if not available_dishes.empty:
            available_dishes = available_dishes[available_dishes["–ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–≤—Ç—Ä–∞–∫–∞:"] != current_dish]
            if not available_dishes.empty:
                selected_dish = available_dishes.sample(1).iloc[0]
                self.lunch[category] = selected_dish["–ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–≤—Ç—Ä–∞–∫–∞:"]
                return self.lunch[category]
            else:
                return f"–í—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –±–ª—é–¥–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '{category}' —É–∂–µ –≤—ã–±—Ä–∞–Ω—ã."
        else:
            return f"–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –±–ª—é–¥ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '{category}'."

    def add_emoji_to_dish(self, category, dish):
        """–î–æ–±–∞–≤–ª—è–µ—Ç —ç–º–æ–¥–∑–∏ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –±–ª—é–¥–∞"""
        emojis = {
            "–ü–µ—Ä–≤–æ–µ –±–ª—é–¥–æ": "üç≤",    # –°—É–ø
            "–≤—Ç–æ—Ä–æ–µ –±–ª—é–¥–æ": "üçñ",   # –û—Å–Ω–æ–≤–Ω–æ–µ –±–ª—é–¥–æ
            "–≥–∞—Ä–Ω–∏—Ä—ã": "üçö",        # –ì–∞—Ä–Ω–∏—Ä
            "—Å–∞–ª–∞—Ç": "ü•ó"           # –°–∞–ª–∞—Ç
        }
        emoji = emojis.get(category, "üçΩ")
        if dish:
            return f"                    {emoji} {dish}"
        else:
            return f"                    {category}: –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –±–ª—é–¥–∞"

    def get_lunch_names(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ –±–ª—é–¥ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –æ–±–µ–¥–∞, —Å —ç–º–æ–¥–∑–∏"""
        lunch_names = []
        for category, dish in self.lunch.items():
            lunch_names.append(self.add_emoji_to_dish(category, dish))
        return "\n".join(lunch_names)

    def get_dish_details(self, dish_name):
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –∏ —Å–ø–æ—Å–æ–± –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –±–ª—é–¥–∞.
        """
        if dish_name not in self.df["–ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–≤—Ç—Ä–∞–∫–∞:"].values:
            return f"–ë–ª—é–¥–æ '{dish_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö."

        dish_data = self.df[self.df["–ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–≤—Ç—Ä–∞–∫–∞:"] == dish_name].iloc[0]
        ingredients = dish_data["–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –Ω–∞ 1 –ø–æ—Ä—Ü–∏—é:"] if not pd.isna(dish_data["–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –Ω–∞ 1 –ø–æ—Ä—Ü–∏—é:"]) else "–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã."
        preparation = dish_data["–ü—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ:"] if not pd.isna(dish_data["–ü—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ:"]) else "–°–ø–æ—Å–æ–± –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω."

        return (
            f"üç¥ {dish_name}\n\n"
            f"–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã:\n{ingredients}\n\n"
            f"–ü—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ:\n{preparation}"
        )
